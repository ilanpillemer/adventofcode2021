//implemented based on solution described in youtube video by Russ Cox https://youtu.be/hmq6veCFo0Y
package main

import "fmt"

func main() {
	fmt.Println(compute([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4}))
}

func compute(m []int) int {

	// a function that returns the next input value
	i := 0
	inp := func() int {
		v := m[i]
		i++
		return v
	}
	add := func(l, r int) int { return l + r }
	mul := func(l, r int) int { return l * r }
	div := func(l, r int) int { return l / r }
	mod := func(l, r int) int { return l % r }
	eql := func(l, r int) int {
		if l == r {
			return 1
		}
		return 0
	}
	var w, x, y, z = 0, 0, 0, 0
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 15)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 9)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 11)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 1)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 10)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 11)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 12)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 3)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -11)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 10)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 11)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 5)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 14)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 0)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -6)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 7)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 1)
	x = add(x, 10)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 9)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -6)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 15)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -6)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 4)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -16)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 10)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -4)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 4)
	y = mul(y, x)
	z = add(z, y)
	w = inp()
	x = mul(x, 0)
	x = add(x, z)
	x = mod(x, 26)
	z = div(z, 26)
	x = add(x, -2)
	x = eql(x, w)
	x = eql(x, 0)
	y = mul(y, 0)
	y = add(y, 25)
	y = mul(y, x)
	y = add(y, 1)
	z = mul(z, y)
	y = mul(y, 0)
	y = add(y, w)
	y = add(y, 9)
	y = mul(y, x)
	z = add(z, y)
	return z
}
